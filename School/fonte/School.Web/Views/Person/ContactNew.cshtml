@model School.Core.Module.Person.Contact

<h4>Novo Contato</h4>
<br />


    @Html.AntiForgeryToken()

<div class="form-horizontal">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group" style="display:none">
        @Html.LabelFor(model => model.PersonId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PersonId, new { htmlAttributes = new { @class = "form-control", @id = "personid" } })
            @Html.ValidationMessageFor(model => model.PersonId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.DropDownListFor(model => model.Type, new List<SelectListItem>
            {
                       new SelectListItem() {Text = "", Value= "0"},
                       new SelectListItem() {Text = "Celular", Value= "1"},
                       new SelectListItem() {Text = "Telefone", Value= "2"},
                       new SelectListItem() {Text = "E-mail", Value= "3"},
                       new SelectListItem() {Text = "Mensangem", Value= "4"},
                       new SelectListItem() {Text = "Outros", Value= "5"}
            }, new { @class = "form-control", @id = "contacttype" })
            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", @id = "description" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="display:none">
        @Html.LabelFor(model => model.AddDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AddDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", @id = "addDate" } })
            @Html.ValidationMessageFor(model => model.AddDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="display:none">
        @Html.LabelFor(model => model.AddUser, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AddUser,"@system" ,new { htmlAttributes = new { @class = "form-control", autocomplete = "off", @id = "addUser" } })
            @Html.ValidationMessageFor(model => model.AddUser, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @*<input type="submit" value="Adicionar" class="btn btn-default" />*@
            <a href="#" onclick="AddContact();" class="btn btn-default">Adicionar</a>
        </div>
    </div>
</div>


@*<div>
    @Html.ActionLink("Voltar", "Details", new { id= Model.PersonId })
</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        function setfocused() {
            $('#description').ready(function () {
                $('#description').focus();
            });
            $('#contacttype').change(function () {
                $('#contacttype').val(undefined);
            });
        }
        
        setfocused();
    </script>

}